
# if文
# if文は、「もしAならばBを実行し、AでなければCを実行」のように、
# 条件や状況に応じて実行内容を変えたい場合に使用します。
if 条件
  処理  # もし条件がtrueだったら処理を行う
end
# 条件に当てはまればtrue、当てはまらなければfalseという真偽判定を行い、
# 条件に当てはまる（true）場合はif～endまでの処理が行われます。
# また、この条件を記述するために欠かせない「比較演算子」「論理演算子」があります。

# 比較演算子
# 「比較演算子」は、条件を比較して判定する際に使います。
# 下記の4つは、数値の大小を比較する演算子です。
# <   # 右辺の方が大きい
# <=  # 右辺の方が大きい、または等しい
# >   # 左辺の方が大きい
# >=  # 左辺の方が大きい、または等しい

total = 100
if total < 200
  puts "合計は200未満です"
end
# 「total < 200」、つまり「totalが200より小さい」という条件に当てはまったため、
# if～endの処理である3行目が実行され、出力が得られました。


# 論理演算子
# !   # 否定
# &&  # どちらの条件も正しければtrue
# ||  # どちらかの条件が正しければtrue
# 下記の2つは、数値だけでなく、文字列の比較（同じ文字列かどうか）でも利用できます。
# ==  # 右辺と左辺が等しい
# !=  # 右辺と左辺が等しくないとき
hand = "グー"
if hand == "グー"
  puts "出した手はグーです"
end

if hand != "チョキ"
  puts "出した手はチョキです"
end

if (hand == "グー") || (hand == "パー")
 puts "出した手はパーです"
end
# 3つ目は()を外してもいいけど、区切りをつけておいた方が分かりやすい。
# 3つ以上つなげた場合は重要

score = 70
if (score >= 50 || score <= 100) && score >= 80  # (score ≧ 50 or score ≦ 100) and (score ≧ 80)
  puts "得点は50点以上または100点以下で、かつ80点以上です。"
end
if score >= 50 || (score <= 100 && score >=80) # (score ≧ 50) or (80 ≦ score ≦ 100)
  puts "得点は50点以上、または80点以上100点以下です。"
end
# 2つ目のif文のみ処理が実行されました。
# このように、どこに区切りを置くかで処理が変わる場合もあります。

# elsif、else
# if文では、elseを使うことでifの条件に当てはまらなかった場合の処理を設定できます。
# 基本の書き方は以下のようになります。
# 複数のif条件を書く時はelsif、一つの条件のときはelseを使う。
if 条件
  処理1  # 条件がtrueだったら処理1を行う
else
  処理2  # 条件がfalseだったら処理2を行う
end
# さらに、elsifを使うことで条件・処理を追加することができます。
# elsifはいくつでも追加可能です。
if 条件1
  処理1  # 条件1がtrueだったら処理1を行う
elsif 条件2
  処理2  # 条件1がfalse、かつ条件2がtrueだったら処理2を行う
elsif 条件3
  処理3  # 条件1と条件2がfalse、かつ条件3がtrueだったら処理3を行う
# ...(中略)...
elsif 条件n
  処理n  # 条件1～条件n-1が全てfalse、かつ条件nがtrueだったら処理nを行う
else
  処理x  # 条件1～条件nが全てfalseだったら処理xを行う
end
